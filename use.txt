package com.example.interceptor;

import org.springframework.ws.client.support.interceptor.ClientInterceptor;
import org.springframework.ws.context.MessageContext;
import org.springframework.ws.soap.saaj.SaajSoapMessage;

import javax.xml.soap.MimeHeaders;
import javax.xml.soap.SOAPMessage;

public class JwtHeaderInterceptor implements ClientInterceptor {

    private final String jwtToken;

    public JwtHeaderInterceptor(String jwtToken) {
        this.jwtToken = jwtToken;
    }

    @Override
    public boolean handleRequest(MessageContext messageContext) {
        try {
            SaajSoapMessage saajSoapMessage = (SaajSoapMessage) messageContext.getRequest();
            SOAPMessage soapMessage = saajSoapMessage.getSaajMessage();
            MimeHeaders headers = soapMessage.getMimeHeaders();
            headers.addHeader("Authorization", "Bearer " + jwtToken);
        } catch (Exception e) {
            throw new RuntimeException("Error adding JWT token to request header", e);
        }
        return true;
    }

    @Override
    public boolean handleResponse(MessageContext messageContext) {
        return true;
    }

    @Override
    public boolean handleFault(MessageContext messageContext) {
        return true;
    }
}
